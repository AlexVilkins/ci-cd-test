services:
  frontend:
    container_name: "frontend"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - shared-volume:/usr/src/app/media
    networks:
      - my_network

  backend:
    container_name: "backend"
    stop_signal: SIGINT
    stdin_open: true
    build:
      context: ./backend
    command: >
      sh -c "poetry run python3 -m main"
    ports:
      - "8000:8000"
    restart: always
    depends_on:
      - redis
      - pyrobot
      - frontend
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - my_network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - './nginx/nginx.conf:/etc/nginx/nginx.conf'
    networks:
      - my_network

  pyrobot:
    container_name: "pyrobot"
    build:
      context: pyrobot
      dockerfile: Dockerfile
    command: >
      sh -c "poetry run python3 -m main"
    restart: always
    depends_on:
      - aioyou
    volumes:
      - shared-volume:/usr/src/app/media
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - my_network

  aioyou:
    container_name: "aioyou"
    build:
      context: aiogram_youtube
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    command: >
      sh -c "poetry run python3 -m main"
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    networks:
      - my_network

  redis:
    container_name: "redis"
    image: redis:6.2-alpine
    ports:
      - "6388:6388"
    restart: always
    command: /bin/sh -c "redis-server --port $$REDISPORT --save 20 1 --loglevel warning --requirepass $$REDISPASSWORD"
    env_file:
      - .env
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  shared-volume:
